<!--
    Copyright 2016 Shawn Gilroy

    This file is part of Bayesian Model Selector.

    Bayesian Model Selector is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 2.

    Bayesian Model Selector is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Bayesian Model Selector.  If not, see <http://www.gnu.org/licenses/gpl-2.0.html>.
-->
    
<Window x:Class="BayesianModeling.View.DiscountingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:BayesianModeling.View"
        xmlns:settings="clr-namespace:BayesianModeling.Properties"    
        ResizeMode="NoResize"
        Icon="/Images/applications-science.png"
        mc:Ignorable="d"
        Title="Discounting Analyses" 
        Height="450" 
        Width="400"
        Top="{Binding Source={x:Static settings:Settings.Default}, Path=DiscountTop, Mode=TwoWay}" 
        Left="{Binding Source={x:Static settings:Settings.Default}, Path=DiscountLeft, Mode=TwoWay}">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ViewClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <TextBlock
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="4"
            FontSize="18"
            Text="Discounting Model Competition"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
        </TextBlock>

        <!-- Data Controls -->

        <Button Name="delaysButton" 
                Grid.Row="1" 
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="10"
                Content="Select Delay Points"
                Command="{Binding GetDelaysRangeCommand}">
        </Button>

        <TextBox
            Grid.Row="1" 
            Grid.Column="2"
            Grid.ColumnSpan="2"
            IsReadOnly="True"
            Margin="10"
            Focusable="False"
            AcceptsTab="False"
            ToolTip="Click button to select delay points"
            Text="{Binding Delays}"
            Background="{Binding Path=DelaysBrush}">
        </TextBox>
        
        <Button Name="valuesButton" 
                Grid.Row="2" 
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="10"
                Content="Select Indifference Points"
                Command="{Binding GetValuesRangeCommand}">
        </Button>

        <TextBox
            Grid.Row="2" 
            Grid.Column="2"
            Grid.ColumnSpan="2"
            IsReadOnly="True"
            Margin="10"
            Focusable="False"
            AcceptsTab="False"
            ToolTip="Click button to select value points"
            Text="{Binding Values}"
            Background="{Binding Path=ValuesBrush}">
        </TextBox>

        <Label Grid.Row="3" 
               Grid.Column="0"
               Grid.ColumnSpan="2"
               Margin="10"
               VerticalContentAlignment="Center"
               HorizontalContentAlignment="Center"
               Content="Enter the Delayed Amount">
        </Label>

        <TextBox
            Name="maxValue"
            Grid.Row="3" 
            Grid.Column="2"
            Grid.ColumnSpan="2"
            Margin="10"
            Text="{Binding MaxValue}">
        </TextBox>

        <!-- Check Box Controls Left -->

        <StackPanel
            Orientation="Horizontal"
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Margin="0,0,15,0">
                <Label Content="Output Model Figures?"/>
                <CheckBox
                    Grid.Row="4"
                    Grid.Column="2"
                    Grid.ColumnSpan="2"
                    Margin="5,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Content="">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding Path=FigureOutput}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding Path=FigureOutput}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>   
            </CheckBox>
        </StackPanel>

        <StackPanel
            Orientation="Horizontal"
            Grid.Row="4"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            Margin="15,0,0,0">
                <Label Content="Save to Worksheet?"/>
                <CheckBox
                    Grid.Row="5"
                    Grid.Column="2"
                    Grid.ColumnSpan="2"
                    Margin="5,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Content="">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding Path=WorkbookOutput}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding Path=WorkbookOutput}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </CheckBox>
        </StackPanel>

        <FlowDocumentScrollViewer
            Grid.Column="0"
            Grid.ColumnSpan="4"
            Grid.Row="5"
            Grid.RowSpan="2"
            IsSelectionEnabled="False"
            VerticalScrollBarVisibility="Hidden">
            <FlowDocument>
                <FlowDocument.Resources>
                    <Style TargetType="{x:Type Paragraph}">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </FlowDocument.Resources>
                <Paragraph FontSize="12" FontFamily="Segoe UI">
                    <Bold>Directions:</Bold>
                </Paragraph>
                <Paragraph FontSize="12" FontFamily="Segoe UI" Padding="0,5,0,0">
                    Bayesian Model Selection requires that users select a range of 
                    Indifference Points (Vertical, with descending values) that 
                    correspond with a range of Delay Points (Vertical, with increasing 
                    values).  Visual and spreadsheet output is available.
                </Paragraph>
            </FlowDocument>
        </FlowDocumentScrollViewer>

        <Button Name="calculateButton" 
                Grid.Row="7" 
                Grid.Column="0"
                Grid.ColumnSpan="4"
                Margin="10"
                Content="Calculate"
                Command="{Binding CalculateScoresCommand}">
        </Button>
    </Grid>
</Window>
