//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BayesianModeling.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BayesianModeling.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # 
        ///#    Copyright 2016 Shawn Gilroy
        ///#
        ///#    This file is part of Discounting Model Selector.
        ///#
        ///#    Discounting Model Selector is free software: you can redistribute it and/or modify
        ///#    it under the terms of the GNU General Public License as published by
        ///#    the Free Software Foundation, version 2.
        ///#
        ///#    Discounting Model Selector is distributed in the hope that it will be useful,
        ///#    but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///#    MERCHANTABILITY or FITNESS FOR A PARTICUL [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ChartingFunctions {
            get {
                return ResourceManager.GetString("ChartingFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap CopyHS {
            get {
                object obj = ResourceManager.GetObject("CopyHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap CutHS {
            get {
                object obj = ResourceManager.GetObject("CutHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Edit_RedoHS {
            get {
                object obj = ResourceManager.GetObject("Edit_RedoHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Edit_UndoHS {
            get {
                object obj = ResourceManager.GetObject("Edit_UndoHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Files_7954 {
            get {
                object obj = ResourceManager.GetObject("Files_7954", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #    Copyright 2016 Chris Franck
        ///#
        ///#    This file is part of Discounting Model Selector.
        ///#
        ///#    Discounting Model Selector is free software: you can redistribute it and/or modify
        ///#    it under the terms of the GNU General Public License as published by
        ///#    the Free Software Foundation, version 2.
        ///#
        ///#    Discounting Model Selector is distributed in the hope that it will be useful,
        ///#    but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///#    MERCHANTABILITY or FITNESS FOR A PARTICULAR P [rest of string was truncated]&quot;;.
        /// </summary>
        public static string FranckComputation {
            get {
                return ResourceManager.GetString("FranckComputation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discounting Model Selector is Copyright (C) 2016 Shawn Gilroy
        ///Contact: Shawn Gilroy (shawn.gilroy@temple.edu)
        ///
        ///====================
        ///Discounting Model Selector LICENSE
        ///====================
        ///
        ///Discounting Model Selector is free software: you can redistribute it and/or modify it 
        ///under the terms of the GNU General Public License as published by the 
        ///Free Software Foundation, version 2.
        ///
        ///Discounting Model Selector is distributed in the hope that it will be useful, but
        ///WITHOUT ANY WARRANTY; without eve [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		    GNU GENERAL PUBLIC LICENSE
        ///		       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.
        ///                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///			    Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Public
        ///License is intended to guara [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_base64enc {
            get {
                return ResourceManager.GetString("License_base64enc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (C) 2016 Chris Franck
        ///
        ///BDS is free software: you can redistribute it and/or modify it 
        ///under the terms of the GNU General Public License as published by the 
        ///Free Software Foundation, version 2 or later.
        ///
        ///BDS is distributed in the hope that it will be useful, but
        ///WITHOUT ANY WARRANTY; without even the implied warranty of
        ///MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
        ///Public License for more details.
        ///
        ///You should have received a copy of the GNU General Public Lic [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_BDS {
            get {
                return ResourceManager.GetString("License_BDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		    GNU GENERAL PUBLIC LICENSE
        ///		       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.
        ///                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///			    Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Public
        ///License is intended to guara [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_EPPlus {
            get {
                return ResourceManager.GetString("License_EPPlus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		    GNU GENERAL PUBLIC LICENSE
        ///		       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.
        ///                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///			    Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Public
        ///License is intended to guar [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_ggplot2 {
            get {
                return ResourceManager.GetString("License_ggplot2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		    GNU GENERAL PUBLIC LICENSE
        ///		       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.
        ///                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///			    Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Public
        ///License is intended to guar [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_Gridextra {
            get {
                return ResourceManager.GetString("License_Gridextra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #  File src/library/stats/R/nls.R
        ///#  Part of the R package, http://www.R-project.org
        ///#
        ///#  Copyright (C) 1999-1999 Saikat DebRoy, Douglas M. Bates, Jose C. Pinheiro
        ///#  Copyright (C) 2000-7    The R Core Team
        ///#
        ///#  This program is free software; you can redistribute it and/or modify
        ///#  it under the terms of the GNU General Public License as published by
        ///#  the Free Software Foundation; either version 2 of the License, or
        ///#  (at your option) any later version.
        ///#
        ///#  This program is distributed in the  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_NLS {
            get {
                return ResourceManager.GetString("License_NLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		    GNU GENERAL PUBLIC LICENSE
        ///		       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.
        ///                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///			    Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Public
        ///License is intended to guara [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_R {
            get {
                return ResourceManager.GetString("License_R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New BSD License (BSD)
        ///Copyright (c) 2010, RecycleBin
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        ///
        ///* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        ///
        ///* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_RdotNet {
            get {
                return ResourceManager.GetString("License_RdotNet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to YEAR: 2008-2014
        ///COPYRIGHT HOLDER: Hadley Wickham .
        /// </summary>
        public static string License_reshape2 {
            get {
                return ResourceManager.GetString("License_reshape2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to scales (R package) is distributed under this license:
        ///
        ///Copyright 2010-2014 Hadley Wickham
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a 
        ///copy of this software and associated documentation files (the &quot;Software&quot;), 
        ///to deal in the Software without restriction, including without limitation 
        ///the rights to use, copy, modify, merge, publish, distribute, sublicense, 
        ///and/or sell copies of the Software, and to permit persons to whom the 
        ///Software is furnished to do so, subject to  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_Scales {
            get {
                return ResourceManager.GetString("License_Scales", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2010, SharpVectorGraphics
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        ///
        ///* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        ///
        ///* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other material [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_SharpVectorGraphics {
            get {
                return ResourceManager.GetString("License_SharpVectorGraphics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
        ///                       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
        /// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Publi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LicenseGPL {
            get {
                return ResourceManager.GetString("LicenseGPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap NewDocumentHS {
            get {
                object obj = ResourceManager.GetObject("NewDocumentHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Offline_16xLG {
            get {
                object obj = ResourceManager.GetObject("Offline_16xLG", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap openHS {
            get {
                object obj = ResourceManager.GetObject("openHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap PasteHS {
            get {
                object obj = ResourceManager.GetObject("PasteHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] pick_range {
            get {
                object obj = ResourceManager.GetObject("pick_range", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Procedure_8937 {
            get {
                object obj = ResourceManager.GetObject("Procedure_8937", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ProcedureMissing_8939 {
            get {
                object obj = ResourceManager.GetObject("ProcedureMissing_8939", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap PropertiesHS {
            get {
                object obj = ResourceManager.GetObject("PropertiesHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap RepeatHS {
            get {
                object obj = ResourceManager.GetObject("RepeatHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap saveHS {
            get {
                object obj = ResourceManager.GetObject("saveHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ScriptFile_452 {
            get {
                object obj = ResourceManager.GetObject("ScriptFile_452", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap SNS {
            get {
                object obj = ResourceManager.GetObject("SNS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon SNS1 {
            get {
                object obj = ResourceManager.GetObject("SNS1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Textfile_818_16x {
            get {
                object obj = ResourceManager.GetObject("Textfile_818_16x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] trash {
            get {
                object obj = ResourceManager.GetObject("trash", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap WorkItemQueryNodeOffline_11949 {
            get {
                object obj = ResourceManager.GetObject("WorkItemQueryNodeOffline_11949", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
